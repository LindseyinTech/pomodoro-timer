{"version":3,"sources":["utils/duration/index.js","pomodoro/Session.js","pomodoro/Finished.js","pomodoro/Pomodoro.js","utils/class-names/index.js","utils/useInterval/index.js","App.js","index.js"],"names":["minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","Session","session","currentDuration","timeElapsedAsAPercent","timeRemaining","className","data-testid","label","givenSeconds","seconds","round","secondsToDuration","style","height","role","aria-valuemin","aria-valuemax","aria-valuenow","width","Finished","src","alt","nextTick","prevState","max","INITIAL_STATE","Pomodoro","classNameToBoolean","useState","isTimerRunning","setIsTimerRunning","setSession","focusDuration","setFocusDuration","breakDuration","setBreakDuration","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","Audio","play","currentSession","nextSession","type","onClick","state","disabled","aria-label","title","nextState","prevStateSession","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f4e63f2.chunk.js","sourcesContent":["/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React from \"react\";\nimport {minutesToDuration, secondsToDuration} from \"../utils/duration\"\n\nexport default function Session({session, currentDuration}){\nif (!session) return null;\n\n\n   \n   let timeElapsedAsAPercent = (100-(session.timeRemaining /(currentDuration*60))*100)\n \nreturn (\n        <div>\n        {/* DONE: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* DONE: Update message below to include current session (Focusing or On Break) total duration */}\n            <h2 data-testid=\"session-title\">\n              {session?.label} for {minutesToDuration(currentDuration)} minutes\n            </h2>\n            {/* DONE: Update message below correctly format the time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(session?.timeRemaining)} remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={timeElapsedAsAPercent}// DONE: Increase aria-valuenow as elapsed time increases\n                style={{ width: timeElapsedAsAPercent +'%' }} // DONE: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      )\n}","import React from \"react\";\n\n\nexport default function Finished( {session, currentDuration} ){\n  if (!session){\n    return null\n  }\n    \nif(session.label===\"On Break\"){   \nreturn (\n<div className=\"row mb-2\">\n<div className=\"col\">\n<img src=\"https://gyazo.com/1d1c24af4d6f8d87f956ed914882478e.gif\" alt=\"good job\"/>\n</div>\n</div>\n\n)\n\n} if (session.label ===\"Focusing\"){\n  return (\n    <div className=\"row mb-2\">\n    <div className=\"col\">\n    <img src=\"https://gyazo.com/9723d0287272b2151764c82a852fbc26.gif\" alt=\"time to focus\"/>\n    </div>\n    </div>\n    \n    )\n\n}\n}\n","import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Session from \"./Session.js\"\nimport Finished from \"./Finished.js\"\nimport {minutesToDuration} from \"../utils/duration\"\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\nconst INITIAL_STATE= {\n  isTimerRunning: false,\n  session: null,\n}\n\n\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(INITIAL_STATE.isTimerRunning);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n  // ToDo: Allow the user to adjust the focus and break duration.\n  const [focusDuration, setFocusDuration] = useState(25)\n  const [breakDuration, setBreakDuration] = useState(5)\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1891.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  };\n\n  //function to increment with the - button\n  function handleDecreaseFocus(){\n    if (focusDuration === 5) return;\n      setFocusDuration(state => state -5)\n    \n  }\n\n  //function for + focus button\n  function handleIncreaseFocus(){\n    if (focusDuration === 60) return;\n    setFocusDuration(state => state +5)\n  }\n\n  //function for - break button on click subtracts 1 minute from break timer\n  function handleDecreaseBreak(){\n    if (breakDuration === 1) return;\n      setBreakDuration(state => state -1)\n    \n  }\n\n  //function for + break button put into onclick property\n  function handleIncreaseBreak(){\n    if (breakDuration === 15) return;\n    setBreakDuration(state => state +1)\n  }\n\n  function handleStopSession(){\n    setIsTimerRunning(INITIAL_STATE.isTimerRunning)\n    setSession(INITIAL_STATE.session)\n    }\n\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* DONE: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}            \n              </span>\n            <div className=\"input-group-append\">\n              {/* DONE?: Implement decreasing focus duration and disable during a focus or break session added onClick */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={handleDecreaseFocus}\n                disabled={session}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* DONE: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={handleIncreaseFocus}\n                disabled={session}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* DONE: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)}    \n              </span>\n              <div className=\"input-group-append\">\n                {/* DONE: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={handleDecreaseBreak}\n                  disabled={session}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* DONE: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={handleIncreaseBreak}\n                  disabled={session}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* DONE: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* DONE: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              onClick={handleStopSession}\n              disabled={!session}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <Session session={session} currentDuration={session?.label ===\"Focusing\"? focusDuration : breakDuration} />\n   \n    <div>\n    <Finished session={session} />\n    </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\nimport Finished from \"./pomodoro/Finished\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}